pluginManagement {
	plugins {
		id "org.springframework.boot" version "${springBootVersion}"
		id "io.spring.nohttp" version "0.0.5.RELEASE"
		id 'org.asciidoctor.jvm.pdf' version '3.2.0'
		id 'org.asciidoctor.jvm.convert' version '3.2.0'
	}
	repositories {
		gradlePluginPortal()
		mavenCentral()
		maven { url "https://repo.spring.io/plugins-release" }
		if (version =~ /((-M|-RC)[0-9]+|-SNAPSHOT)$/) {
			maven { url "https://repo.spring.io/plugins-milestone" }
		}
		if (version.endsWith('-SNAPSHOT')) {
			maven { url "https://repo.spring.io/plugins-snapshot" }
		}
	}
}

rootProject.name = "spring-cloud-open-service-broker"

include ":spring-cloud-open-service-broker-docs"
include ":spring-cloud-open-service-broker-core"
include ":spring-cloud-open-service-broker-autoconfigure"
include ":spring-cloud-starter-open-service-broker"
include ":spring-cloud-open-service-broker-contract-tests"
include ":spring-cloud-open-service-broker-acceptance-webflux"
include ":spring-cloud-open-service-broker-acceptance-webmvc"

project(":spring-cloud-open-service-broker-docs").projectDir = "$rootDir/spring-cloud-open-service-broker-docs" as File
project(":spring-cloud-open-service-broker-core").projectDir = "$rootDir/spring-cloud-open-service-broker-core" as File
project(":spring-cloud-open-service-broker-autoconfigure").projectDir = "$rootDir/spring-cloud-open-service-broker-autoconfigure" as File
project(":spring-cloud-starter-open-service-broker").projectDir = "$rootDir/spring-cloud-starter-open-service-broker" as File
project(":spring-cloud-open-service-broker-contract-tests").projectDir = "$rootDir/spring-cloud-open-service-broker-contract-tests" as File
project(":spring-cloud-open-service-broker-acceptance-webflux").projectDir = "$rootDir/spring-cloud-open-service-broker-acceptance-webflux" as File
project(":spring-cloud-open-service-broker-acceptance-webmvc").projectDir = "$rootDir/spring-cloud-open-service-broker-acceptance-webmvc" as File
